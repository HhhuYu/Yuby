// Implementation file for parser generated by fsyacc
module YubyPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "YubyPar.fsy"

open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 16 "YubyPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | NL
  | DEF
  | NOT
  | SEQOR
  | SEQAND
  | SEQAND2
  | SEQOR2
  | NOT2
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | BELONG
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | POWER
  | ELSE
  | IF
  | INT
  | NIL
  | PRINT
  | RETURN
  | WHILE
  | ELSIF
  | PUTS
  | END
  | THEN
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_NL
    | TOKEN_DEF
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_SEQAND2
    | TOKEN_SEQOR2
    | TOKEN_NOT2
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_BELONG
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_POWER
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NIL
    | TOKEN_PRINT
    | TOKEN_RETURN
    | TOKEN_WHILE
    | TOKEN_ELSIF
    | TOKEN_PUTS
    | TOKEN_END
    | TOKEN_THEN
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Classdec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | NL  -> 12 
  | DEF  -> 13 
  | NOT  -> 14 
  | SEQOR  -> 15 
  | SEQAND  -> 16 
  | SEQAND2  -> 17 
  | SEQOR2  -> 18 
  | NOT2  -> 19 
  | EQ  -> 20 
  | NE  -> 21 
  | GT  -> 22 
  | LT  -> 23 
  | GE  -> 24 
  | LE  -> 25 
  | BELONG  -> 26 
  | PLUS  -> 27 
  | MINUS  -> 28 
  | TIMES  -> 29 
  | DIV  -> 30 
  | MOD  -> 31 
  | POWER  -> 32 
  | ELSE  -> 33 
  | IF  -> 34 
  | INT  -> 35 
  | NIL  -> 36 
  | PRINT  -> 37 
  | RETURN  -> 38 
  | WHILE  -> 39 
  | ELSIF  -> 40 
  | PUTS  -> 41 
  | END  -> 42 
  | THEN  -> 43 
  | CSTSTRING _ -> 44 
  | NAME _ -> 45 
  | CSTINT _ -> 46 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_NL 
  | 13 -> TOKEN_DEF 
  | 14 -> TOKEN_NOT 
  | 15 -> TOKEN_SEQOR 
  | 16 -> TOKEN_SEQAND 
  | 17 -> TOKEN_SEQAND2 
  | 18 -> TOKEN_SEQOR2 
  | 19 -> TOKEN_NOT2 
  | 20 -> TOKEN_EQ 
  | 21 -> TOKEN_NE 
  | 22 -> TOKEN_GT 
  | 23 -> TOKEN_LT 
  | 24 -> TOKEN_GE 
  | 25 -> TOKEN_LE 
  | 26 -> TOKEN_BELONG 
  | 27 -> TOKEN_PLUS 
  | 28 -> TOKEN_MINUS 
  | 29 -> TOKEN_TIMES 
  | 30 -> TOKEN_DIV 
  | 31 -> TOKEN_MOD 
  | 32 -> TOKEN_POWER 
  | 33 -> TOKEN_ELSE 
  | 34 -> TOKEN_IF 
  | 35 -> TOKEN_INT 
  | 36 -> TOKEN_NIL 
  | 37 -> TOKEN_PRINT 
  | 38 -> TOKEN_RETURN 
  | 39 -> TOKEN_WHILE 
  | 40 -> TOKEN_ELSIF 
  | 41 -> TOKEN_PUTS 
  | 42 -> TOKEN_END 
  | 43 -> TOKEN_THEN 
  | 44 -> TOKEN_CSTSTRING 
  | 45 -> TOKEN_NAME 
  | 46 -> TOKEN_CSTINT 
  | 49 -> TOKEN_end_of_input
  | 47 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Topdec 
    | 8 -> NONTERM_Vardec 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Classdec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_Block 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_StmtOrDecSeq 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_Stmt 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtM 
    | 37 -> NONTERM_StmtM 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_StmtU 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_Expr 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_Access 
    | 65 -> NONTERM_Access 
    | 66 -> NONTERM_Access 
    | 67 -> NONTERM_Exprs 
    | 68 -> NONTERM_Exprs 
    | 69 -> NONTERM_Exprs1 
    | 70 -> NONTERM_Exprs1 
    | 71 -> NONTERM_Const 
    | 72 -> NONTERM_Const 
    | 73 -> NONTERM_Const 
    | 74 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 49 
let _fsyacc_tagOfErrorTerminal = 47

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | NL  -> "NL" 
  | DEF  -> "DEF" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | SEQAND2  -> "SEQAND2" 
  | SEQOR2  -> "SEQOR2" 
  | NOT2  -> "NOT2" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | BELONG  -> "BELONG" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | POWER  -> "POWER" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NIL  -> "NIL" 
  | PRINT  -> "PRINT" 
  | RETURN  -> "RETURN" 
  | WHILE  -> "WHILE" 
  | ELSIF  -> "ELSIF" 
  | PUTS  -> "PUTS" 
  | END  -> "END" 
  | THEN  -> "THEN" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NL  -> (null : System.Object) 
  | DEF  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | SEQAND2  -> (null : System.Object) 
  | SEQOR2  -> (null : System.Object) 
  | NOT2  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | BELONG  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | POWER  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NIL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | ELSIF  -> (null : System.Object) 
  | PUTS  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 17us; 65535us; 0us; 6us; 4us; 6us; 17us; 34us; 26us; 46us; 28us; 46us; 35us; 34us; 37us; 46us; 44us; 46us; 45us; 46us; 47us; 46us; 48us; 46us; 68us; 46us; 69us; 46us; 71us; 46us; 72us; 46us; 75us; 46us; 77us; 46us; 19us; 65535us; 0us; 12us; 4us; 12us; 16us; 19us; 17us; 11us; 18us; 19us; 26us; 12us; 28us; 12us; 35us; 12us; 37us; 12us; 44us; 12us; 45us; 12us; 47us; 12us; 48us; 12us; 68us; 12us; 69us; 12us; 71us; 12us; 72us; 12us; 75us; 12us; 77us; 12us; 2us; 65535us; 0us; 9us; 4us; 9us; 2us; 65535us; 0us; 10us; 4us; 10us; 1us; 65535us; 17us; 27us; 2us; 65535us; 17us; 33us; 35us; 36us; 13us; 65535us; 26us; 31us; 28us; 29us; 37us; 66us; 44us; 66us; 45us; 66us; 47us; 66us; 48us; 66us; 68us; 66us; 69us; 66us; 71us; 66us; 72us; 66us; 75us; 66us; 77us; 66us; 13us; 65535us; 26us; 40us; 28us; 40us; 37us; 38us; 44us; 41us; 45us; 41us; 47us; 42us; 48us; 43us; 68us; 40us; 69us; 40us; 71us; 40us; 72us; 40us; 75us; 40us; 77us; 40us; 13us; 65535us; 26us; 44us; 28us; 44us; 37us; 44us; 44us; 44us; 45us; 44us; 47us; 44us; 48us; 44us; 68us; 44us; 69us; 44us; 71us; 45us; 72us; 44us; 75us; 44us; 77us; 44us; 13us; 65535us; 26us; 49us; 28us; 49us; 37us; 49us; 44us; 49us; 45us; 49us; 47us; 49us; 48us; 49us; 68us; 50us; 69us; 51us; 71us; 52us; 72us; 53us; 75us; 54us; 77us; 55us; 13us; 65535us; 26us; 56us; 28us; 56us; 37us; 56us; 44us; 56us; 45us; 56us; 47us; 56us; 48us; 56us; 68us; 56us; 69us; 57us; 71us; 56us; 72us; 56us; 75us; 58us; 77us; 56us; 38us; 65535us; 26us; 59us; 28us; 59us; 37us; 59us; 44us; 59us; 45us; 59us; 47us; 59us; 48us; 59us; 62us; 63us; 67us; 68us; 68us; 59us; 69us; 59us; 71us; 59us; 72us; 59us; 74us; 75us; 75us; 59us; 77us; 59us; 84us; 85us; 87us; 112us; 90us; 91us; 92us; 93us; 94us; 95us; 113us; 96us; 114us; 97us; 115us; 98us; 116us; 99us; 117us; 100us; 118us; 101us; 119us; 102us; 120us; 103us; 121us; 104us; 122us; 105us; 123us; 106us; 124us; 107us; 125us; 108us; 126us; 109us; 127us; 110us; 132us; 111us; 135us; 112us; 38us; 65535us; 26us; 83us; 28us; 83us; 37us; 83us; 44us; 83us; 45us; 83us; 47us; 83us; 48us; 83us; 62us; 83us; 67us; 83us; 68us; 83us; 69us; 83us; 71us; 83us; 72us; 83us; 74us; 83us; 75us; 83us; 77us; 83us; 84us; 83us; 87us; 83us; 90us; 83us; 92us; 83us; 94us; 83us; 113us; 83us; 114us; 83us; 115us; 83us; 116us; 83us; 117us; 83us; 118us; 83us; 119us; 83us; 120us; 83us; 121us; 83us; 122us; 83us; 123us; 83us; 124us; 83us; 125us; 83us; 126us; 83us; 127us; 83us; 132us; 83us; 135us; 83us; 41us; 65535us; 17us; 130us; 18us; 130us; 26us; 82us; 28us; 82us; 37us; 82us; 44us; 82us; 45us; 82us; 47us; 82us; 48us; 82us; 62us; 82us; 67us; 82us; 68us; 82us; 69us; 82us; 71us; 82us; 72us; 82us; 74us; 82us; 75us; 82us; 77us; 82us; 84us; 82us; 87us; 82us; 90us; 82us; 92us; 82us; 94us; 82us; 113us; 82us; 114us; 82us; 115us; 82us; 116us; 82us; 117us; 82us; 118us; 82us; 119us; 82us; 120us; 82us; 121us; 82us; 122us; 82us; 123us; 82us; 124us; 82us; 125us; 82us; 126us; 82us; 127us; 82us; 129us; 130us; 132us; 82us; 135us; 82us; 1us; 65535us; 87us; 88us; 2us; 65535us; 87us; 134us; 135us; 136us; 0us; 65535us; 0us; 65535us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 27us; 47us; 50us; 53us; 55us; 58us; 72us; 86us; 100us; 114us; 128us; 167us; 206us; 248us; 250us; 253us; 254us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 2us; 4us; 5us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 4us; 8us; 10us; 11us; 12us; 3us; 8us; 11us; 12us; 1us; 9us; 3us; 9us; 45us; 64us; 2us; 9us; 64us; 1us; 10us; 3us; 10us; 13us; 65us; 2us; 10us; 65us; 3us; 10us; 11us; 12us; 1us; 10us; 2us; 11us; 12us; 1us; 11us; 1us; 12us; 1us; 12us; 3us; 13us; 14us; 15us; 3us; 13us; 14us; 15us; 1us; 13us; 1us; 13us; 2us; 13us; 33us; 1us; 13us; 3us; 14us; 15us; 33us; 2us; 14us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 2us; 20us; 21us; 1us; 20us; 1us; 21us; 2us; 21us; 23us; 2us; 21us; 24us; 2us; 21us; 25us; 1us; 23us; 2us; 23us; 39us; 2us; 24us; 25us; 1us; 24us; 1us; 25us; 1us; 26us; 3us; 26us; 34us; 38us; 2us; 26us; 34us; 2us; 26us; 35us; 2us; 26us; 35us; 2us; 26us; 36us; 3us; 26us; 37us; 41us; 1us; 27us; 2us; 27us; 38us; 2us; 27us; 40us; 18us; 28us; 29us; 30us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 28us; 1us; 29us; 2us; 31us; 32us; 17us; 31us; 32us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 31us; 1us; 32us; 1us; 33us; 4us; 34us; 35us; 38us; 39us; 19us; 34us; 35us; 38us; 39us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 2us; 34us; 38us; 1us; 34us; 2us; 35us; 39us; 1us; 35us; 1us; 35us; 4us; 36us; 37us; 40us; 41us; 19us; 36us; 37us; 40us; 41us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 36us; 2us; 37us; 41us; 2us; 37us; 41us; 1us; 38us; 1us; 39us; 1us; 40us; 3us; 42us; 44us; 66us; 1us; 43us; 1us; 44us; 16us; 44us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 2us; 45us; 64us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 16us; 46us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 47us; 16us; 47us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 1us; 48us; 16us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 16us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 66us; 17us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 69us; 70us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 2us; 65us; 66us; 1us; 65us; 1us; 66us; 1us; 66us; 1us; 68us; 1us; 70us; 1us; 70us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 15us; 17us; 19us; 21us; 23us; 28us; 32us; 34us; 38us; 41us; 43us; 47us; 50us; 54us; 56us; 59us; 61us; 63us; 65us; 69us; 73us; 75us; 77us; 80us; 82us; 86us; 89us; 91us; 94us; 96us; 98us; 100us; 103us; 105us; 107us; 110us; 113us; 116us; 118us; 121us; 124us; 126us; 128us; 130us; 134us; 137us; 140us; 143us; 146us; 150us; 152us; 155us; 158us; 177us; 179us; 181us; 184us; 202us; 204us; 206us; 208us; 213us; 233us; 236us; 238us; 241us; 243us; 245us; 250us; 270us; 272us; 275us; 278us; 280us; 282us; 284us; 288us; 290us; 292us; 309us; 312us; 314us; 316us; 318us; 320us; 337us; 339us; 356us; 358us; 375us; 392us; 409us; 426us; 443us; 460us; 477us; 494us; 511us; 528us; 545us; 562us; 579us; 596us; 613us; 630us; 647us; 665us; 667us; 669us; 671us; 673us; 675us; 677us; 679us; 681us; 683us; 685us; 687us; 689us; 691us; 693us; 695us; 697us; 699us; 702us; 704us; 706us; 708us; 710us; 712us; |]
let _fsyacc_action_rows = 137
let _fsyacc_actionTableElements = [|3us; 16386us; 1us; 16us; 13us; 25us; 45us; 13us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 1us; 16us; 13us; 25us; 45us; 13us; 0us; 16387us; 2us; 32768us; 7us; 7us; 12us; 8us; 0us; 16388us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 2us; 16392us; 2us; 20us; 5us; 21us; 1us; 16392us; 5us; 21us; 0us; 16393us; 23us; 16448us; 0us; 16393us; 1us; 87us; 2us; 16393us; 5us; 16393us; 6us; 16393us; 7us; 16393us; 8us; 16393us; 10us; 16393us; 11us; 16393us; 12us; 16393us; 13us; 16393us; 19us; 16393us; 26us; 16393us; 32us; 16393us; 35us; 16393us; 36us; 16393us; 40us; 16393us; 43us; 16393us; 44us; 16393us; 46us; 16393us; 47us; 16393us; 48us; 16393us; 49us; 16393us; 0us; 16393us; 2us; 32768us; 1us; 16us; 45us; 13us; 2us; 16400us; 1us; 18us; 45us; 15us; 2us; 32768us; 1us; 18us; 45us; 15us; 2us; 32768us; 2us; 20us; 5us; 21us; 0us; 16394us; 2us; 32768us; 6us; 22us; 46us; 23us; 0us; 16395us; 1us; 32768us; 6us; 24us; 0us; 16396us; 1us; 32768us; 45us; 26us; 9us; 16406us; 1us; 17us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 1us; 32768us; 2us; 28us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 1us; 16417us; 42us; 30us; 0us; 16397us; 1us; 16417us; 42us; 32us; 0us; 16398us; 0us; 16401us; 1us; 16402us; 8us; 35us; 2us; 32768us; 1us; 16us; 45us; 13us; 0us; 16403us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 1us; 16405us; 4us; 39us; 0us; 16404us; 0us; 16405us; 0us; 16405us; 0us; 16405us; 0us; 16405us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 10us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 42us; 80us; 45us; 14us; 2us; 32768us; 7us; 47us; 12us; 48us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 0us; 16410us; 1us; 16410us; 33us; 69us; 1us; 16410us; 42us; 70us; 1us; 16410us; 33us; 72us; 1us; 16410us; 42us; 73us; 1us; 16410us; 42us; 76us; 1us; 16410us; 42us; 78us; 0us; 16411us; 1us; 16411us; 42us; 79us; 1us; 16411us; 42us; 81us; 17us; 16414us; 7us; 60us; 12us; 61us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 0us; 16412us; 0us; 16413us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 17us; 32768us; 7us; 64us; 12us; 65us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 25us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 43us; 71us; 45us; 14us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 0us; 16418us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 0us; 16419us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 25us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 43us; 77us; 45us; 14us; 0us; 16420us; 9us; 16406us; 1us; 18us; 3us; 37us; 14us; 90us; 34us; 67us; 37us; 92us; 38us; 62us; 39us; 74us; 41us; 94us; 45us; 14us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 0us; 16424us; 2us; 16426us; 5us; 132us; 9us; 84us; 0us; 16427us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 15us; 16428us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 1us; 16448us; 1us; 87us; 5us; 16451us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 1us; 32768us; 2us; 89us; 0us; 16429us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 0us; 16430us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 15us; 16431us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 15us; 16432us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 3us; 16433us; 29us; 115us; 30us; 116us; 31us; 117us; 3us; 16434us; 29us; 115us; 30us; 116us; 31us; 117us; 0us; 16435us; 0us; 16436us; 0us; 16437us; 9us; 16438us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 9us; 16439us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 9us; 16440us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 9us; 16441us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 9us; 16442us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 9us; 16443us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 11us; 16444us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 11us; 16445us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 13us; 16446us; 16us; 124us; 17us; 125us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 13us; 16447us; 16us; 124us; 17us; 125us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 16us; 32768us; 6us; 133us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 16us; 16453us; 8us; 135us; 15us; 126us; 16us; 124us; 17us; 125us; 18us; 127us; 20us; 118us; 21us; 119us; 22us; 120us; 23us; 121us; 24us; 122us; 25us; 123us; 27us; 113us; 28us; 114us; 29us; 115us; 30us; 116us; 31us; 117us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 0us; 16448us; 2us; 32768us; 1us; 129us; 45us; 128us; 2us; 32768us; 2us; 131us; 5us; 132us; 0us; 16449us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 0us; 16450us; 0us; 16452us; 5us; 32768us; 1us; 129us; 14us; 90us; 37us; 92us; 41us; 94us; 45us; 86us; 0us; 16454us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 16us; 17us; 18us; 19us; 20us; 23us; 25us; 26us; 50us; 51us; 54us; 57us; 60us; 63us; 64us; 67us; 68us; 70us; 71us; 73us; 83us; 85us; 95us; 97us; 98us; 100us; 101us; 102us; 104us; 107us; 108us; 118us; 120us; 121us; 122us; 123us; 124us; 125us; 135us; 146us; 149us; 159us; 169us; 170us; 172us; 174us; 176us; 178us; 180us; 182us; 183us; 185us; 187us; 205us; 206us; 207us; 213us; 231us; 232us; 233us; 234us; 240us; 266us; 276us; 277us; 287us; 297us; 298us; 304us; 330us; 331us; 341us; 342us; 343us; 344us; 345us; 348us; 349us; 355us; 371us; 373us; 379us; 381us; 382us; 388us; 389us; 395us; 411us; 417us; 433us; 437us; 441us; 442us; 443us; 444us; 454us; 464us; 474us; 484us; 494us; 504us; 516us; 528us; 542us; 556us; 573us; 590us; 596us; 602us; 608us; 614us; 620us; 626us; 632us; 638us; 644us; 650us; 656us; 662us; 668us; 674us; 680us; 681us; 684us; 687us; 688us; 694us; 695us; 696us; 702us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 1us; 1us; 1us; 1us; 3us; 3us; 4us; 7us; 4us; 4us; 0us; 1us; 1us; 3us; 3us; 1us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 1us; 3us; 3us; 1us; 6us; 7us; 4us; 5us; 6us; 5us; 4us; 5us; 1us; 1us; 3us; 4us; 2us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 4us; 0us; 1us; 1us; 3us; 1us; 2us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 8us; 8us; 9us; 9us; 10us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 16390us; 16391us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 65535us; 65535us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 16405us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16410us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16411us; 65535us; 65535us; 65535us; 16412us; 16413us; 65535us; 65535us; 16415us; 16416us; 16417us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 16419us; 65535us; 65535us; 16420us; 65535us; 65535us; 16422us; 16423us; 16424us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 65535us; 16449us; 65535us; 16450us; 16452us; 65535us; 16454us; |]
let _fsyacc_reductions ()  =    [| 
# 442 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Absyn.program)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startMain));
# 451 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Topdecs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "YubyPar.fsy"
                                                               Prog _1 
                   )
# 40 "YubyPar.fsy"
                 : Absyn.program));
# 462 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 44 "YubyPar.fsy"
                                                               [] 
                   )
# 44 "YubyPar.fsy"
                 : 'Topdecs));
# 472 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Topdec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Topdecs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "YubyPar.fsy"
                                                               _1 :: _2 
                   )
# 45 "YubyPar.fsy"
                 : 'Topdecs));
# 484 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "YubyPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 49 "YubyPar.fsy"
                 : 'Topdec));
# 495 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "YubyPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 50 "YubyPar.fsy"
                 : 'Topdec));
# 506 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Fundec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "YubyPar.fsy"
                                                               _1 
                   )
# 51 "YubyPar.fsy"
                 : 'Topdec));
# 517 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Classdec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "YubyPar.fsy"
                                                               _1 
                   )
# 52 "YubyPar.fsy"
                 : 'Topdec));
# 528 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardesc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "YubyPar.fsy"
                                                               (_1)                  
                   )
# 56 "YubyPar.fsy"
                 : 'Vardec));
# 539 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "YubyPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 60 "YubyPar.fsy"
                 : 'Vardesc));
# 550 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardesc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "YubyPar.fsy"
                                                               _2                                      
                   )
# 61 "YubyPar.fsy"
                 : 'Vardesc));
# 561 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardesc)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "YubyPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 62 "YubyPar.fsy"
                 : 'Vardesc));
# 572 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardesc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "YubyPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 63 "YubyPar.fsy"
                 : 'Vardesc));
# 584 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Paramdecs)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "YubyPar.fsy"
                                                                  Fundec(_2, _4, _6) 
                   )
# 67 "YubyPar.fsy"
                 : 'Fundec));
# 597 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "YubyPar.fsy"
                                                                  Fundec(_2,  NIL, _3) 
                   )
# 68 "YubyPar.fsy"
                 : 'Fundec));
# 609 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "YubyPar.fsy"
                                                               Classdec(_2,_3)
                   )
# 72 "YubyPar.fsy"
                 : 'Classdec));
# 621 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "YubyPar.fsy"
                                                               [] 
                   )
# 75 "YubyPar.fsy"
                 : 'Paramdecs));
# 631 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Paramdecs1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "YubyPar.fsy"
                                                               _1 
                   )
# 76 "YubyPar.fsy"
                 : 'Paramdecs));
# 642 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "YubyPar.fsy"
                                                               [_1]     
                   )
# 80 "YubyPar.fsy"
                 : 'Paramdecs1));
# 653 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Paramdecs1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "YubyPar.fsy"
                                                               _1 :: _3 
                   )
# 81 "YubyPar.fsy"
                 : 'Paramdecs1));
# 665 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtOrDecSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "YubyPar.fsy"
                                                               Block _2 
                   )
# 85 "YubyPar.fsy"
                 : 'Block));
# 676 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtOrDecSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "YubyPar.fsy"
                                                               Block _2 
                   )
# 86 "YubyPar.fsy"
                 : 'Block));
# 687 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "YubyPar.fsy"
                                                               [] 
                   )
# 90 "YubyPar.fsy"
                 : 'StmtOrDecSeq));
# 697 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Stmt)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtOrDecSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "YubyPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 91 "YubyPar.fsy"
                 : 'StmtOrDecSeq));
# 709 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtOrDecSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "YubyPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 92 "YubyPar.fsy"
                 : 'StmtOrDecSeq));
# 721 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Vardec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtOrDecSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "YubyPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 93 "YubyPar.fsy"
                 : 'StmtOrDecSeq));
# 733 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "YubyPar.fsy"
                                                               _1 
                   )
# 97 "YubyPar.fsy"
                 : 'Stmt));
# 744 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtU)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "YubyPar.fsy"
                                                               _1 
                   )
# 98 "YubyPar.fsy"
                 : 'Stmt));
# 755 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "YubyPar.fsy"
                                                               Expr(_1)             
                   )
# 102 "YubyPar.fsy"
                 : 'StmtM));
# 766 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "YubyPar.fsy"
                                                               Expr(_1)             
                   )
# 103 "YubyPar.fsy"
                 : 'StmtM));
# 777 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "YubyPar.fsy"
                                                               Expr(_1)             
                   )
# 104 "YubyPar.fsy"
                 : 'StmtM));
# 788 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "YubyPar.fsy"
                                                               Return(Some(_2))     
                   )
# 105 "YubyPar.fsy"
                 : 'StmtM));
# 799 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "YubyPar.fsy"
                                                               Return(Some(_2))     
                   )
# 106 "YubyPar.fsy"
                 : 'StmtM));
# 810 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Block)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "YubyPar.fsy"
                                                               _1                   
                   )
# 107 "YubyPar.fsy"
                 : 'StmtM));
# 821 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "YubyPar.fsy"
                                                               If(_2, _3, _5)       
                   )
# 108 "YubyPar.fsy"
                 : 'StmtM));
# 834 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 109 "YubyPar.fsy"
                                                               If(_2, _4, _6)       
                   )
# 109 "YubyPar.fsy"
                 : 'StmtM));
# 847 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "YubyPar.fsy"
                                                               While(_2, _3)        
                   )
# 110 "YubyPar.fsy"
                 : 'StmtM));
# 859 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "YubyPar.fsy"
                                                               While(_2, _4)        
                   )
# 111 "YubyPar.fsy"
                 : 'StmtM));
# 871 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtU)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "YubyPar.fsy"
                                                               If(_2, _3, _5)       
                   )
# 115 "YubyPar.fsy"
                 : 'StmtU));
# 884 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'Stmt)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "YubyPar.fsy"
                                                               If(_2, _4, Block []) 
                   )
# 116 "YubyPar.fsy"
                 : 'StmtU));
# 896 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtU)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "YubyPar.fsy"
                                                               While(_2, _3)        
                   )
# 117 "YubyPar.fsy"
                 : 'StmtU));
# 908 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'StmtM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "YubyPar.fsy"
                                                               While(_2, _3)        
                   )
# 118 "YubyPar.fsy"
                 : 'StmtU));
# 920 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "YubyPar.fsy"
                                                               Access _1           
                   )
# 122 "YubyPar.fsy"
                 : 'Expr));
# 931 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ExprNotAccess)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "YubyPar.fsy"
                                                               _1                  
                   )
# 123 "YubyPar.fsy"
                 : 'Expr));
# 942 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "YubyPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 127 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 954 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exprs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "YubyPar.fsy"
                                                               Call(_1, _3)        
                   )
# 128 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 966 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "YubyPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 129 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 977 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "YubyPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 130 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 988 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "YubyPar.fsy"
                                                               Prim1("puts",_2+nl )
                   )
# 131 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 999 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "YubyPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 132 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1011 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "YubyPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 133 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1023 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "YubyPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 134 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1035 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "YubyPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 135 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1047 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "YubyPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 136 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1059 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "YubyPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 137 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1071 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "YubyPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 138 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1083 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "YubyPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 139 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1095 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "YubyPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 140 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1107 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "YubyPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 141 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1119 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "YubyPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 142 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1131 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "YubyPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 143 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1143 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "YubyPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 144 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1155 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "YubyPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 145 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1167 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "YubyPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 146 "YubyPar.fsy"
                 : 'ExprNotAccess));
# 1179 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "YubyPar.fsy"
                                                               AccVar _1           
                   )
# 150 "YubyPar.fsy"
                 : 'Access));
# 1190 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'Access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "YubyPar.fsy"
                                                               _2                  
                   )
# 151 "YubyPar.fsy"
                 : 'Access));
# 1201 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "YubyPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 152 "YubyPar.fsy"
                 : 'Access));
# 1213 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "YubyPar.fsy"
                                                               []       
                   )
# 156 "YubyPar.fsy"
                 : 'Exprs));
# 1223 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exprs1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "YubyPar.fsy"
                                                               _1       
                   )
# 157 "YubyPar.fsy"
                 : 'Exprs));
# 1234 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "YubyPar.fsy"
                                                               [_1]     
                   )
# 161 "YubyPar.fsy"
                 : 'Exprs1));
# 1245 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'Expr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'Exprs1)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "YubyPar.fsy"
                                                               _1 :: _3 
                   )
# 162 "YubyPar.fsy"
                 : 'Exprs1));
# 1257 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "YubyPar.fsy"
                                                               _1       
                   )
# 166 "YubyPar.fsy"
                 : 'Const));
# 1268 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "YubyPar.fsy"
                                                               - _2     
                   )
# 167 "YubyPar.fsy"
                 : 'Const));
# 1279 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "YubyPar.fsy"
                                                               -1       
                   )
# 168 "YubyPar.fsy"
                 : 'Const));
# 1289 "YubyPar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "YubyPar.fsy"
                                                               TypI     
                   )
# 172 "YubyPar.fsy"
                 : 'Type));
|]
# 1300 "YubyPar.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 50;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
